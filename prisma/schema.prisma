// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          String   @id @default(uuid())
  title       String   @unique
  vendorCode  String   @unique
  reviews     String?
  rating      Float?   @default(0)
  article     String   @unique
  type        String
  properties  Json?    @db.JsonB
  description String?
  price       Decimal  @default(0.00) @db.Decimal(10, 2) // до 10 знаков, из них 2 после запятой
  enabled     Boolean  @default(true)
  image       String?
  quantity    Int      @default(0)
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  Reviews Reviews[]
}

model User {
  id        Int       @id @default(autoincrement())
  email     String    @unique
  username  String?
  reviews   Reviews[]
  profile   Profile?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Profile {
  id     Int     @id @default(autoincrement())
  bio    String?
  user   User    @relation(fields: [userId], references: [id])
  userId Int     @unique
}

model Reviews {
  id        Int      @id @default(autoincrement())
  content   String
  rating    Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([userId, productId])
}
